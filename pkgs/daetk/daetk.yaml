extends: [autotools_package]

# hardcode parmetis dependency to fix PETSc's improper linking of parmetis libraries
dependencies:
  build: [petsc, parmetis, mpi]

defaults:
  petscversion: '3.17.2'

when petscversion == '3.7.5':
  sources:
  - key: tar.gz:ggkr3upxu74syj5bq22fx4ha2ewzzyun
    url: https://github.com/erdc-cm/daetk/archive/1.0.0.tar.gz
when petscversion == '3.6.1':
  sources:
  - url: https://github.com/erdc-cm/daetk.git
    key: git:9c4107d441bc9a0e1d5a603f79874997062349e3
when petscversion == '3.5.2':
  sources:
  - url: https://github.com/erdc-cm/daetk.git
    key: git:e05b9975a2d413148ce122a274be675b27f9450d
when petscversion == '3.17.2':
  sources:
  - key: tar.gz:rpgdo62zz6sfqmb2psc3khnxkgychozw
    url: https://github.com/erdc/daetk/archive/refs/tags/1.0.2.tar.gz

build_stages:
- when: platform == 'Darwin'
  name: configure
  mode: replace
  files: [arch.darwin, archive.darwin, sources.darwin, remove_fortran_dependencies.patch]
  after: prologue
  handler: bash
  bash: |
    cp _hashdist/arch.darwin config/darwin
    cp _hashdist/archive.darwin config/darwin.archive
    cp _hashdist/sources.darwin config/darwin.sources
    patch -p1 < _hashdist/remove_fortran_dependencies.patch
    export DAETK_DIR=`pwd`
    export DAETK_ARCH=darwin
    export PETSC_DIR=$PETSC_DIR
    export PETSC=$PETSC_DIR
    export MPI=$MPI_DIR
    touch dep.txt
    
- when: machine == 'SGIICEX'
  name: configure
  mode: replace
  files: [arch.linux, archive.linux, sources.linux]
  after: prologue
  handler: bash
  bash: |
    cp _hashdist/arch.linux config/linux
    cp _hashdist/archive.linux config/linux.archive
    cp _hashdist/sources.linux config/linux.sources
    export DAETK_DIR=`pwd`
    export DAETK_ARCH=linux
    export PETSC_DIR=$PETSC_DIR
    export PETSC=$PETSC_DIR
    export MPI=$MPI_DIR
    export MPIF77=mpif90
    touch dep.txt

- when: platform == 'linux'
  name: configure
  mode: replace
  files: [arch.linux, archive.linux, sources.linux]
  after: prologue
  handler: bash
  bash: |
    cp _hashdist/arch.linux config/linux
    cp _hashdist/archive.linux config/linux.archive
    cp _hashdist/sources.linux config/linux.sources
    export DAETK_DIR=`pwd`
    export DAETK_ARCH=linux
    export PETSC_DIR=$PETSC_DIR
    export PETSC=$PETSC_DIR
    export MPI=$MPI_DIR
    touch dep.txt

- when: machine == 'SGIICEX'
  name: configure
  mode: replace
  files: [arch.linux, archive.linux, sources.linux]
  after: prologue
  handler: bash
  bash: |
    cp _hashdist/arch.linux config/linux
    cp _hashdist/archive.linux config/linux.archive
    cp _hashdist/sources.linux config/linux.sources
    export DAETK_DIR=`pwd`
    export DAETK_ARCH=linux
    export PETSC_DIR=$PETSC_DIR
    export PETSC=$PETSC_DIR
    export MPI=$MPI_DIR
    export MPIF77=mpif90
    touch dep.txt

- when: platform == 'Cygwin'
  name: configure
  mode: replace
  files: [arch.cygwin, archive.cygwin, sources.cygwin]
  after: prologue
  handler: bash
  bash: |
    cp _hashdist/arch.cygwin config/cygwin
    cp _hashdist/archive.cygwin config/cygwin.archive
    cp _hashdist/sources.cygwin config/cygwin.sources
    export DAETK_DIR=`pwd`
    export DAETK_ARCH=cygwin
    export PETSC_DIR=$PETSC_DIR
    export PETSC=$PETSC_DIR
    export MPI=$MPI_DIR
    touch dep.txt

- name: make
  mode: replace
  handler: bash
  after: configure
  bash: |
    make

- name: install
  handler: bash
  mode: replace
  after: make
  bash: |
    mkdir $ARTIFACT/lib
    cp libdaetk.* $ARTIFACT/lib
    mkdir $ARTIFACT/include
    cp *.h $ARTIFACT/include
    cp -r pete/pete-2.1.0/src/PETE $ARTIFACT/include

# Special case for OS X, post-fix library rpaths with install_name_tool
- when: platform == 'Darwin'
  name: rpath_fix
  handler: bash
  after: install
  bash: |
    install_name_tool -change libmetis.dylib ${PARMETIS_DIR}/lib/libmetis.dylib ${ARTIFACT}/lib/libdaetk.dylib
    install_name_tool -change libparmetis.dylib ${PARMETIS_DIR}/lib/libparmetis.dylib ${ARTIFACT}/lib/libdaetk.dylib


- when: platform == 'Cygwin'
  name: install
  handler: bash
  mode: replace
  after: make
  bash: |
    mkdir $ARTIFACT/lib
    mkdir $ARTIFACT/bin
    cp cygdaetk.dll $ARTIFACT/bin
    cp libdaetk.* $ARTIFACT/lib
    mkdir $ARTIFACT/include
    cp *.h $ARTIFACT/include
    cp -r pete/pete-2.1.0/src/PETE $ARTIFACT/include
